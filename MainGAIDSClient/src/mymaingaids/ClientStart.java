package mymaingaids;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClientStart.java
 *
 * Created on Sep 8, 2012, 12:58:09 PM
 */

import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.net.Socket;
import javax.swing.JOptionPane;

/**
 *
 * @author admin
 */
public class ClientStart extends javax.swing.JFrame implements Runnable{

    String ipAddress = "192.168.40.131";
    static DataInputStream din;
    static DataOutputStream dout;
    Thread watch;
    
    
    String msg="";
    /** Creates new form ClientStart */
    public ClientStart(){
        initComponents();
        
        try
        {
        
          Socket soc = new Socket(ipAddress, 5217);//change the IP to server IP address
            din = new DataInputStream(soc.getInputStream());
           dout = new DataOutputStream(soc.getOutputStream());
            //transferfileClient t = new transferfileClient(soc);
            //t.displayMenu();
            System.err.println("In Clientttttt");
            watch = new Thread(this);
        } catch (Exception e) {
            //System.err.println(e.getMessage());
            e.printStackTrace();
            }

        
 }
    
    
   
 /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Lucida Bright", 1, 28)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("SEND FILE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Lucida Bright", 1, 28)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 102, 102));
        jButton2.setText("BROWSE FOLDER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Lucida Bright", 1, 28)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 102, 102));
        jButton3.setText("BROWSE WEBPAGE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("CLIENT PAGE CONNECT TO SERVER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
           System.out.println("in browse WP");
        String temp;
        try
        {
        temp = din.readUTF();
        
        System.out.println("Read UTF for Browse WP: "+temp);
        
        if (temp.equals("No")) {
                    JOptionPane.showMessageDialog(this, "You are not allowed to perform HTTP Operation!!!");
                    System.exit(1);
                } else {
                    //Thread.sleep(5000);
                    System.err.println("in else");
                    
                    
                    new OpenURI("http://"+ipAddress+":8080/GIDSHTTP/index.jsp");
                }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        } 
     
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
       
        System.out.println("Browse Folder");
        String temp;
        try
        {
             temp = din.readUTF();
             
             System.out.println("Read UTF for Browse : "+temp);
             
             if (temp.equals("No")) {
                    JOptionPane.showMessageDialog(this, "You are not allowed to perform HTTP Operation!!!");
                    System.exit(1);
                } else {
                    Runtime rt = Runtime.getRuntime();
                    Process pr = rt.exec("explorer \\\\"+ipAddress+"\\Sharing");


                }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println("Send File");
        String temp;
        try
        {
        temp = din.readUTF();
        
        System.out.println("Read UTF for Open File : "+temp);
        
        if (temp.equals("No")) {
                    JOptionPane.showMessageDialog(this, "You are not allowed to perform FTP Operation!!!");
                    System.exit(1);
                } else { 
            
                    
                    File f = new File("D:\\Files\\IDSAllow.txt");
                    byte[] mybyte= new byte[(int)f.length()];
                    
                    System.out.println("Sending File ...");
                    FileInputStream fin = new FileInputStream(f);
                    BufferedInputStream bis = new BufferedInputStream(fin);
                    
                    bis.read(mybyte,0,mybyte.length);
                    
                    dout.write(mybyte,0,mybyte.length);
                    dout.flush();
                    fin.close();
                    bis.close();
                    dout.close();
                }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
     public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ClientStart().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables



public void run() {
    try {
            while (true) {
                new WatchFolder("F:\\Project");

                if (WatchFolder.stop) {
                    JOptionPane.showMessageDialog(this, "User with IP- " + ipAddress + " is Blocked!!!");

                    File f = new File("F:/Project/IDSAllow.txt");
                    //FileInputStream fs = new FileInputStream(f);
                    DataInputStream ds = new DataInputStream(new FileInputStream(f));

                    System.out.println(ds.readLine());
                    StringBuffer sb = new StringBuffer();
                    // break;

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}